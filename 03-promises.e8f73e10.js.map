{"mappings":"oeAAAA,EAAA,SAYA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAnBAQ,SAASC,cAAc,aAS/BC,iBAAiB,SAmDtB,SAAyBC,GACrBA,EAAEC,iBAEF,IAAIC,EAAaC,OAAOC,KAAKf,MAAMgB,OAC/BC,EAAOH,OAAOC,KAAKE,KAAKD,OACxBE,EAASJ,OAAOC,KAAKG,OAAOF,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAGnCrB,EAAcqB,EAFKN,EAAaI,EAAOE,GAGpCC,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAU,IAEhEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBqB,OAAOG,QAAQ,sBAAoBzB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form.form');\nconst options = {\n  position: 'center-bottom',\n  distance: '15px',\n  borderRadius: '15px',\n  timeout: 10000,\n  clickToClose: true,\n  cssAnimationStyle: 'from-right',\n};\nform.addEventListener('click', onPromiseCreate);\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n// function onPromiseCreate(e) {\n//   e.preventDefault();\n//   const { delay, step, amount } = e.currentTarget.elements;\n//   let inputDelay = Number(delay.value);\n//   let inputStep = Number(step.value);\n//   let inputAmount = Number(amount.value);\n\n//   for (let i = 1; i <= inputAmount; i += 1) {\n//     inputDelay += inputStep;\n\n//     createPromise(i, inputDelay)\n//       .then(({ position, delay }) => {\n//         Notiflix.Notify.success(\n//           `✅ Fulfilled promise ${position} in ${delay}ms`,\n//           options\n//         );\n//       })\n//       .catch(({ position, delay }) => {\n//         Notiflix.Notify.failure(\n//           `❌ Rejected promise ${position} in ${delay}ms`,\n//           options\n//         );\n//       });\n//     e.currentTarget.reset();\n//   }\n// }\nfunction onPromiseCreate(e) {\n    e.preventDefault();\n  \n    let valueDelay = Number(refs.delay.value);\n    let step = Number(refs.step.value);\n    let amount = Number(refs.amount.value);\n  \n    for (let i = 1; i <= amount; i += 1) {\n      let promiseDelay = valueDelay + step * i;\n  \n      createPromise(i, promiseDelay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n  \n"],"names":["parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","valueDelay","Number","refs","value","step","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.e8f73e10.js.map"}